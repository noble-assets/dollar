syntax = "proto3";

package noble.dollar.vaults.v1;

import "amino/amino.proto";
import "cosmos_proto/cosmos.proto";
import "gogoproto/gogo.proto";

option go_package = "dollar.noble.xyz/types/vaults";

// Lock is an event emitted when a user lock $USDN into a Vault.
message Lock {
  string account = 1;
  string vault_type = 2;
  string index = 3 [
    (amino.dont_omitempty) = true,
    (cosmos_proto.scalar) = "cosmos.Dec",
    (gogoproto.customtype) = "cosmossdk.io/math.LegacyDec",
    (gogoproto.nullable) = false
  ];
  string amount = 4 [
    (amino.dont_omitempty) = true,
    (cosmos_proto.scalar) = "cosmos.Int",
    (gogoproto.customtype) = "cosmossdk.io/math.Int",
    (gogoproto.nullable) = false
  ];
  string principal = 5 [
    (amino.dont_omitempty) = true,
    (cosmos_proto.scalar) = "cosmos.Int",
    (gogoproto.customtype) = "cosmossdk.io/math.Int",
    (gogoproto.nullable) = false
  ];
}

// Unlock is an event emitted when a user unlock their $USDN from a Vault.
message Unlock {
  string account = 1;
  string vault_type = 2;
  string amount = 3 [
    (amino.dont_omitempty) = true,
    (cosmos_proto.scalar) = "cosmos.Int",
    (gogoproto.customtype) = "cosmossdk.io/math.Int",
    (gogoproto.nullable) = false
  ];
}

// StatePaused is an event emitted when the module pause
// state is changed.
message StatePaused {
  string paused = 1;
}

// RewardClaimed is an event emitted when an user claim their rewards.
message RewardClaimed {
  string account = 1;
  string amount = 2 [
    (amino.dont_omitempty) = true,
    (cosmos_proto.scalar) = "cosmos.Int",
    (gogoproto.customtype) = "cosmossdk.io/math.Int",
    (gogoproto.nullable) = false
  ];
}
